//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AliveCharactersComponent aliveCharacters { get { return (AliveCharactersComponent)GetComponent(GameComponentsLookup.AliveCharacters); } }
    public bool hasAliveCharacters { get { return HasComponent(GameComponentsLookup.AliveCharacters); } }

    public void AddAliveCharacters(System.Collections.Generic.List<GameEntity> newValue) {
        var index = GameComponentsLookup.AliveCharacters;
        var component = (AliveCharactersComponent)CreateComponent(index, typeof(AliveCharactersComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAliveCharacters(System.Collections.Generic.List<GameEntity> newValue) {
        var index = GameComponentsLookup.AliveCharacters;
        var component = (AliveCharactersComponent)CreateComponent(index, typeof(AliveCharactersComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAliveCharacters() {
        RemoveComponent(GameComponentsLookup.AliveCharacters);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAliveCharacters;

    public static Entitas.IMatcher<GameEntity> AliveCharacters {
        get {
            if (_matcherAliveCharacters == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AliveCharacters);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAliveCharacters = matcher;
            }

            return _matcherAliveCharacters;
        }
    }
}
