//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity toolbarEntity { get { return GetGroup(GameMatcher.Toolbar).GetSingleEntity(); } }
    public ToolbarComponent toolbar { get { return toolbarEntity.toolbar; } }
    public bool hasToolbar { get { return toolbarEntity != null; } }

    public GameEntity SetToolbar(Toolbar newValue) {
        if (hasToolbar) {
            throw new Entitas.EntitasException("Could not set Toolbar!\n" + this + " already has an entity with ToolbarComponent!",
                "You should check if the context already has a toolbarEntity before setting it or use context.ReplaceToolbar().");
        }
        var entity = CreateEntity();
        entity.AddToolbar(newValue);
        return entity;
    }

    public void ReplaceToolbar(Toolbar newValue) {
        var entity = toolbarEntity;
        if (entity == null) {
            entity = SetToolbar(newValue);
        } else {
            entity.ReplaceToolbar(newValue);
        }
    }

    public void RemoveToolbar() {
        toolbarEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ToolbarComponent toolbar { get { return (ToolbarComponent)GetComponent(GameComponentsLookup.Toolbar); } }
    public bool hasToolbar { get { return HasComponent(GameComponentsLookup.Toolbar); } }

    public void AddToolbar(Toolbar newValue) {
        var index = GameComponentsLookup.Toolbar;
        var component = (ToolbarComponent)CreateComponent(index, typeof(ToolbarComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceToolbar(Toolbar newValue) {
        var index = GameComponentsLookup.Toolbar;
        var component = (ToolbarComponent)CreateComponent(index, typeof(ToolbarComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveToolbar() {
        RemoveComponent(GameComponentsLookup.Toolbar);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherToolbar;

    public static Entitas.IMatcher<GameEntity> Toolbar {
        get {
            if (_matcherToolbar == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Toolbar);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherToolbar = matcher;
            }

            return _matcherToolbar;
        }
    }
}
