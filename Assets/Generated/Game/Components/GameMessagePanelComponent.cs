//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity messagePanelEntity { get { return GetGroup(GameMatcher.MessagePanel).GetSingleEntity(); } }
    public MessagePanelComponent messagePanel { get { return messagePanelEntity.messagePanel; } }
    public bool hasMessagePanel { get { return messagePanelEntity != null; } }

    public GameEntity SetMessagePanel(MessagePanel newValue) {
        if (hasMessagePanel) {
            throw new Entitas.EntitasException("Could not set MessagePanel!\n" + this + " already has an entity with MessagePanelComponent!",
                "You should check if the context already has a messagePanelEntity before setting it or use context.ReplaceMessagePanel().");
        }
        var entity = CreateEntity();
        entity.AddMessagePanel(newValue);
        return entity;
    }

    public void ReplaceMessagePanel(MessagePanel newValue) {
        var entity = messagePanelEntity;
        if (entity == null) {
            entity = SetMessagePanel(newValue);
        } else {
            entity.ReplaceMessagePanel(newValue);
        }
    }

    public void RemoveMessagePanel() {
        messagePanelEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MessagePanelComponent messagePanel { get { return (MessagePanelComponent)GetComponent(GameComponentsLookup.MessagePanel); } }
    public bool hasMessagePanel { get { return HasComponent(GameComponentsLookup.MessagePanel); } }

    public void AddMessagePanel(MessagePanel newValue) {
        var index = GameComponentsLookup.MessagePanel;
        var component = (MessagePanelComponent)CreateComponent(index, typeof(MessagePanelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMessagePanel(MessagePanel newValue) {
        var index = GameComponentsLookup.MessagePanel;
        var component = (MessagePanelComponent)CreateComponent(index, typeof(MessagePanelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMessagePanel() {
        RemoveComponent(GameComponentsLookup.MessagePanel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMessagePanel;

    public static Entitas.IMatcher<GameEntity> MessagePanel {
        get {
            if (_matcherMessagePanel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MessagePanel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMessagePanel = matcher;
            }

            return _matcherMessagePanel;
        }
    }
}
